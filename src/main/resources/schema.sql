DROP TABLE IF EXISTS COURSE;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS ROLE_PERMISSION;
DROP TABLE IF EXISTS ROLE;
DROP TABLE IF EXISTS PERMISSION;
DROP TABLE IF EXISTS COURSE_USER;
 
CREATE TABLE COURSE(
  id INT AUTO_INCREMENT  PRIMARY KEY,
  title VARCHAR(250) NOT NULL,
  desc VARCHAR(1000) NOT NULL,
  available NUMBER(1) NOT NULL,
);

CREATE TABLE USER(
  id INT AUTO_INCREMENT  PRIMARY KEY,
  name VARCHAR(250) NOT NULL,
  email VARCHAR(1000) NOT NULL,
  password VARCHAR(1000) NOT NULL,
  role_id NUMBER(1) NOT NULL
);

CREATE TABLE ROLE(
  id INT AUTO_INCREMENT  PRIMARY KEY,
  name VARCHAR(250) NOT NULL
);

CREATE TABLE PERMISSION(
  id INT AUTO_INCREMENT  PRIMARY KEY,
  name VARCHAR(250) NOT NULL
);

CREATE TABLE ROLE_PERMISSION(
  id INT AUTO_INCREMENT  PRIMARY KEY,
  ROLE_ID INT NOT NULL,
  PERMISSION_ID INT NOT NULL
);

CREATE TABLE COURSE_USER(
  id INT AUTO_INCREMENT  PRIMARY KEY,
  USER_ID INT NOT NULL,
  COURSE_ID INT NOT NULL,
  status VARCHAR(30) NULL
);

ALTER TABLE USER
ADD FOREIGN KEY (ROLE_ID)
REFERENCES ROLE(id);

ALTER TABLE COURSE_USER
ADD FOREIGN KEY (USER_ID)
REFERENCES USER(id);

ALTER TABLE COURSE_USER
ADD FOREIGN KEY (COURSE_ID)
REFERENCES COURSE(id);

ALTER TABLE ROLE_PERMISSION
ADD FOREIGN KEY (ROLE_ID)
REFERENCES ROLE(id);

ALTER TABLE ROLE_PERMISSION
ADD FOREIGN KEY (PERMISSION_ID)
REFERENCES PERMISSION(id);